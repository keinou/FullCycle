apiVersion: apps/v1
kind: Deployment
metadata:
  name: goserver
  labels:
    app: goserver
spec:
  selector:
    matchLabels:
      app: goserver
  replicas: 1
  template:
    metadata:
      name: goserver
      labels:
        app: goserver
    spec:
      containers:
      - name: goserver
        image: "karczevski/hello-go:v9.6"
        
        #definindo recursos minimos e limites
        resources:
          requests:
            memory: "20Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "500m"

        # garante inicialização inicial
        startupProbe:
          httpGet:
            path: /healthz
            port: 5000
          periodSeconds: 3
          failureThreshold: 30

        # Avisa que ta pronto
        readinessProbe:
          httpGet:
            path: /healthz
            port: 5000
          periodSeconds: 3
          failureThreshold: 1
          initialDelaySeconds: 10

        # health check
        livenessProbe:
          httpGet:
            path: /healthz
            port: 5000
          periodSeconds: 5
          failureThreshold: 3
          timeoutSeconds: 1
          successThreshold: 1
          initialDelaySeconds: 15

        ports:
          - containerPort: 80

        # seta configs e secretes como variaveis de ambiente nos containers
        envFrom:
          - configMapRef:
              name: goserver-env
          - secretRef:
              name: goserver-secret

        # monta o volume
        volumeMounts:
          - mountPath: "/go/myfamily"
            name: config
            readOnly: true
          - mountPath: "/go/pvc"
            name: goserver-volume

        # env:
        #   - name: NAME
        #     valueFrom:
        #       configMapKeyRef:
        #         name: goserver-env
        #         key: NAME
        #   - name: AGE
        #     valueFrom:
        #       configMapKeyRef:
        #         name: goserver-env
        #         key: AGE

      volumes:
        - name: goserver-volume
          persistentVolumeClaim:
            claimName: goserver-pvc
        # de config para volume
        - name: config
          configMap:
            name: configmap-family
            items:
              - key: members
                path: "family.txt"